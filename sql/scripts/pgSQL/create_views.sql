BEGIN;

	CREATE OR REPLACE VIEW w_data.V_DEBITI_CREDITI_APERTI AS
	SELECT
		TO_CHAR(mv.DATA_MOV, 'DD/MM/YYYY') 								AS DATA,
		TO_CHAR(IMPORTO, '999999999.00€')								AS IMPORTO,
		CASE WHEN mv.DARE_AVERE = true THEN 'Debito' else 'Credito' END	AS DEBITO_CREDITO,
		dc.ORIGINE														AS ORIGINE,
		dc.DESCRIZIONE													AS DESCRIZIONE,
		mv.NOTE															AS NOTE,
		mv.ID															AS ID
	FROM w_data.MOVIMENTI mv
	INNER JOIN w_data.DEBITI_CREDITI dc ON
		mv.ID = ID_MOV
	WHERE SALDATO = false;

	CREATE OR REPLACE VIEW w_data.V_ENTRATE AS
	SELECT
		TO_CHAR(mv.DATA_MOV, 'DD/MM/YYYY')			AS DATA,
		TO_CHAR(IMPORTO, '999999999.00€')			AS IMPORTO,
		COALESCE(mnt.DESCRIZIONE, '')				AS TIPO,
		ent.DESCRIZIONE								AS DESCRIZIONE,
		COALESCE(mv.NOTE, '')						AS NOTE,
		mv.ID										AS ID
	FROM w_data.MOVIMENTI mv
	INNER JOIN w_data.ENTRATE ent ON
		ent.ID_MOV = mv.id
	LEFT JOIN w_map.MAP_ENTRATE mnt ON
		mnt.id = ent.ID_TIPO_ENTRATA;

	CREATE OR REPLACE VIEW w_data.V_SPESE_FISSE AS
	SELECT
		TO_CHAR(mv.DATA_MOV, 'DD/MM/YYYY') 			AS DATA,
		TO_CHAR(IMPORTO, '999999999.00€')			AS IMPORTO,
		sf.DESCRIZIONE								AS DESCRIZIONE,
		mc.DESCRIZIONE								AS PAGAMENTO,
		COALESCE(mv.NOTE, '')						AS NOTE,
		mv.ID										AS ID
	FROM w_data.MOVIMENTI mv
	INNER JOIN w_data.SPESE_FISSE sf ON
		sf.ID_MOV = mv.id
	INNER JOIN w_map.MAP_conti mc ON
		mv.ID_CONTO = mc.id;

	CREATE OR REPLACE VIEW w_data.V_SPESE_MANTENIMENTO AS
	SELECT
		TO_CHAR(mv.DATA_MOV, 'DD/MM/YYYY') 			AS DATA,
		TO_CHAR(IMPORTO, '999999999.00€')			AS IMPORTO,
		sm.DESCRIZIONE								AS DESCRIZIONE,
		COALESCE(mv.NOTE, '')						AS NOTE,
		mv.ID										AS ID
	FROM w_data.MOVIMENTI mv
	INNER JOIN w_data.SPESE_MANTENIMENTO sm ON
		sm.ID_MOV = mv.id;

	CREATE OR REPLACE VIEW w_data.V_SPESE_VARIE AS
	SELECT
		TO_CHAR(mv.DATA_MOV, 'DD/MM/YYYY') 		AS DATA,
		TO_CHAR(IMPORTO, '999999999.00€')		AS IMPORTO,
		msv.DESCRIZIONE							AS TIPO,
		sv.DESCRIZIONE							AS DESCRIZIONE,
		COALESCE(mv.NOTE, '')					AS NOTE,
		mv.ID									AS ID
	FROM w_data.MOVIMENTI mv
	INNER JOIN w_data.SPESE_VARIE sv ON
		sv.ID_MOV = mv.id
	INNER JOIN w_map.MAP_SPESE_VARIE msv ON
		msv.id = sv.ID_TIPO_SPESA;

	CREATE OR REPLACE VIEW w_data.V_SPESE_VIAGGI AS
	SELECT
		TO_CHAR(mv.DATA_MOV, 'DD/MM/YYYY') 		AS DATA,
		TO_CHAR(IMPORTO, '999999999.00€')		AS IMPORTO,
		sv.VIAGGIO								AS VIAGGIO,
		sv.DESCRIZIONE							AS DESCRIZIONE,
		COALESCE(mv.NOTE, '')					AS NOTE,
		mv.ID									AS ID
	FROM w_data.MOVIMENTI mv
	INNER JOIN w_data.SPESE_VIAGGI sv ON
		sv.ID_MOV = mv.id;

	CREATE OR REPLACE VIEW w_data.V_STIPENDI AS
	SELECT
		TO_CHAR(mv.DATA_MOV, 'DD/MM/YYYY') 			AS DATA,
		TO_CHAR(IMPORTO, '999999999.00€')			AS IMPORTO,
		TO_CHAR(LORDO, '999999999.00€')				AS LORDO,
		TO_CHAR(TRATTENUTE, '999999999.00€')		AS TRATTENUTE,
		TO_CHAR(RIMBORSO_SPESE, '999999999.00€')	AS R_SPESE,
		CASE 
			WHEN MESE = 1 THEN 'January'
			WHEN MESE = 2 THEN 'February'
			WHEN MESE = 3 THEN 'March'
			WHEN MESE = 4 THEN 'April'
			WHEN MESE = 5 THEN 'May'
			WHEN MESE = 6 THEN 'June'
			WHEN MESE = 7 THEN 'July'
			WHEN MESE = 8 THEN 'August'
			WHEN MESE = 9 THEN 'September'
			WHEN MESE = 10 THEN 'October'
			WHEN MESE = 11 THEN 'November'
			WHEN MESE = 12 THEN 'December'
		END 									AS MESE,
		stp.DDL									AS DDL,
		mv.ID									AS ID
	FROM w_data.MOVIMENTI mv
	INNER JOIN w_data.STIPENDI stp ON
		stp.ID_MOV = mv.id;

COMMIT;