BEGIN;

CREATE VIEW w_data.V_DEBITI_CREDITI_APERTI AS
SELECT
	TO_CHAR(mv.DATA_MOV, 'dd/MM/yyyy')								AS DATA,
	ROUND(mv.IMPORTO::numeric, 2)									AS IMPORTO,
	CASE WHEN mv.DARE_AVERE = true THEN 'Debito' else 'Credito' END	AS DEBITO_CREDITO,
	dc.ORIGINE														AS ORIGINE,
	dc.DESCRIZIONE													AS DESCRIZIONE,
	mv.NOTE															AS NOTE,
	mv.ID															AS ID
FROM w_data.MOVIMENTI mv
INNER JOIN w_data.DEBITI_CREDITI dc ON
	mv.ID = ID_MOV
WHERE SALDATO = false;

CREATE VIEW w_data.V_ENTRATE AS
SELECT TO_CHAR(mv.DATA_MOV, 'dd/MM/yyyy')		AS DATA,
	ROUND(IMPORTO::numeric, 2)					AS IMPORTO,
	COALESCE(mnt.DESCRIZIONE, '')				AS TIPO,
	ent.DESCRIZIONE								AS DESCRIZIONE,
	COALESCE(mv.NOTE, '')						AS NOTE,
	mv.ID										AS ID
FROM w_data.MOVIMENTI mv
INNER JOIN w_data.ENTRATE ent ON
	ent.ID_MOV = mv.id
LEFT JOIN w_map.MAP_ENTRATE mnt ON
	mnt.id = ent.ID_TIPO_ENTRATA;

CREATE VIEW w_data.V_SPESE_FISSE AS
SELECT TO_CHAR(mv.DATA_MOV, 'dd/MM/yyyy')		AS DATA,
	ROUND(IMPORTO::numeric, 2)					AS IMPORTO,
	sf.DESCRIZIONE								AS DESCRIZIONE,
	mc.DESCRIZIONE								AS PAGAMENTO,
	COALESCE(mv.NOTE, '')						AS NOTE,
	mv.ID										AS ID
FROM w_data.MOVIMENTI mv
INNER JOIN w_data.SPESE_FISSE sf ON
	sf.ID_MOV = mv.id
INNER JOIN w_map.MAP_conti mc ON
	mv.ID_CONTO = mc.id;

CREATE VIEW w_data.V_SPESE_MANTENIMENTO AS
SELECT TO_CHAR(mv.DATA_MOV, 'dd/MM/yyyy')		AS DATA,
	ROUND(IMPORTO::numeric, 2)					AS IMPORTO,
	sm.DESCRIZIONE								AS DESCRIZIONE,
	COALESCE(mv.NOTE, '')						AS NOTE,
	mv.ID										AS ID
FROM w_data.MOVIMENTI mv
INNER JOIN w_data.SPESE_MANTENIMENTO sm ON
	sm.ID_MOV = mv.id;

CREATE VIEW w_data.V_SPESE_VARIE AS
SELECT TO_CHAR(mv.DATA_MOV, 'dd/MM/yyyy')	AS DATA,
	ROUND(IMPORTO::numeric, 2)				AS IMPORTO,
	msv.DESCRIZIONE							AS TIPO,
	sv.DESCRIZIONE							AS DESCRIZIONE,
	COALESCE(mv.NOTE, '')					AS NOTE,
	mv.ID									AS ID
FROM w_data.MOVIMENTI mv
INNER JOIN w_data.SPESE_VARIE sv ON
	sv.ID_MOV = mv.id
INNER JOIN w_map.MAP_SPESE_VARIE msv ON
	msv.id = sv.ID_TIPO_SPESA;

CREATE VIEW w_data.V_SPESE_VIAGGI AS
SELECT TO_CHAR(mv.DATA_MOV, 'dd/MM/yyyy')	AS DATA,
	ROUND(IMPORTO::numeric, 2)				AS IMPORTO,
	sv.VIAGGIO								AS VIAGGIO,
	sv.DESCRIZIONE							AS DESCRIZIONE,
	COALESCE(mv.NOTE, '')					AS NOTE,
	mv.ID									AS ID
FROM w_data.MOVIMENTI mv
INNER JOIN w_data.SPESE_VIAGGI sv ON
	sv.ID_MOV = mv.id;

CREATE VIEW w_data.V_STIPENDI AS
SELECT
	ROUND(stp.NETTO::numeric, 2)			AS NETTO,
	ROUND(stp.TRATTENUTE::numeric, 2)		AS TRATTENUTE,
	ROUND(stp.RIMBORSO_SPESE::numeric, 2)	AS R_SPESE,
	MESE									AS MESE,
	stp.DDL									AS DDL,
	mv.ID									AS ID
FROM w_data.MOVIMENTI mv
INNER JOIN w_data.STIPENDI stp ON
	stp.ID_MOV = mv.id;

COMMIT;